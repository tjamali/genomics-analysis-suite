RNA Alignment
=============

For RNA-seq alignment, it is crucial to use a reference that accurately
represents the transcribed regions of the genome. The
**Homo_sapiens.GRCh38.cdna.all.fa.gz** file contains the complete set of
cDNA sequences (complementary DNA) for the human genome, including both
experimentally validated and computationally predicted transcripts. This
file includes sequences for all known protein-coding and non-coding RNA
transcripts derived from mRNA, making it ideal for aligning RNA-seq
reads, which are typically derived from mRNA.

Aligning RNA-seq data to a reference transcriptome (cDNA) ensures that
reads are mapped directly to the exonic regions, avoiding large intronic
spaces that are present in the full genome sequence but not relevant for
RNA-seq data. This approach leads to more accurate alignment, better
quantification of gene expression, and clearer identification of
splicing events.

How to Download the Reference File
----------------------------------

1. **Navigate to the Ensembl FTP Site**:

   -  Use the following link to access the directory containing the
      reference file:

      ::

         https://ftp.ensembl.org/pub/release-112/fasta/homo_sapiens/cdna/

2. **Download the File**:

   -  Download the ``Homo_sapiens.GRCh38.cdna.all.fa.gz`` file using
      ``wget`` or your browser:

      .. code:: bash

         wget https://ftp.ensembl.org/pub/release-112/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz

3. **Uncompress the File**:

   -  Once downloaded, uncompress the file using ``gzip``:

      .. code:: bash

         gzip -d Homo_sapiens.GRCh38.cdna.all.fa.gz

   -  This will give you the ``Homo_sapiens.GRCh38.cdna.all.fa`` file.

How to Use Minimap2 for RNA-seq Alignment
-----------------------------------------

1. **Align the BAM File to the cDNA Reference**:

   -  Use ``minimap2`` to align the RNA-seq BAM file against the
      downloaded cDNA reference. This command assumes you are starting
      with FASTQ reads, not a pre-existing BAM file:

      .. code:: bash

         minimap2 -ax splice -uf -k14 Homo_sapiens.GRCh38.cdna.all.fa your_reads.fastq | samtools sort -o aligned_reads.bam

   -  If you are starting with a BAM file, first convert it back to
      FASTQ (if necessary) or realign it if the initial alignment was
      incorrect:

      .. code:: bash

         samtools fastq your_bam_file.bam | minimap2 -ax splice -uf -k14 Homo_sapiens.GRCh38.cdna.all.fa - | samtools sort -o realigned_reads.bam

2. **Index the BAM File**:

   -  After alignment, index the BAM file for easier access and
      visualization:

      .. code:: bash

         samtools index aligned_reads.bam

3. **Visualize and Analyze**:

   -  You can now visualize the aligned reads using tools like IGV
      (Integrative Genomics Viewer) to ensure correct alignment and to
      analyze gene expression, splicing, and other RNA-seq data
      characteristics.

Summary
-------

Aligning RNA-seq data to the ``Homo_sapiens.GRCh38.cdna.all.fa.gz``
reference ensures that your reads are mapped accurately to the regions
of interest, facilitating robust gene expression analysis and splicing
detection. Using ``minimap2`` for this process is efficient and widely
accepted for handling long-read data such as that generated by Nanopore
sequencing.



Understanding Secondary and Supplementary Alignments in BAM Files
-----------------------------------------------------------------

When working with BAM files, it is important to understand the concepts
of **secondary** and **supplementary alignments**. These alignments help
provide a complete picture of how sequencing reads map to a reference
genome, especially in complex regions.

1. **Primary Alignment**
^^^^^^^^^^^^^^^^^^^^^^^^

-  The **primary alignment** is the “best” alignment of a read to the
   reference genome. Each read will have exactly one primary alignment
   unless it is unaligned.
-  The primary alignment is identified by the absence of specific flag
   bits (256 for secondary or 2048 for supplementary).

2. **Secondary Alignment**
^^^^^^^^^^^^^^^^^^^^^^^^^^

-  **Secondary alignments** represent alternative locations where a read
   could align with similar scores. This is common in repetitive regions
   of the genome where a read might map equally well to multiple places.
-  **Flag value 256** is set for secondary alignments.

3. **Supplementary Alignment**
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

-  **Supplementary alignments** are used for reads that align in a
   chimeric or split manner, where parts of the read align to different
   locations. This is often seen in structural variants or chimeric
   reads.
-  **Flag value 2048** is set for supplementary alignments.

4. **Understanding Combined Flags**
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

-  Flags in BAM files are bitwise, meaning multiple flags can be
   combined. Here are two common combinations:

   -  **256 + 16 = 272**: A secondary alignment on the reverse strand.
   -  **2048 + 16 = 2064**: A supplementary alignment on the reverse
      strand.

Extracting Secondary and Supplementary Alignments Using ``samtools``
--------------------------------------------------------------------

You can use ``samtools`` to filter and view specific types of alignments
from a BAM file.

1. **Viewing Secondary Alignments**
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

To view only the secondary alignments from a BAM file:

.. code:: bash

   samtools view -h -f 256 your_file.bam

-  **``-h``**: Includes the header in the output.
-  **``-f 256``**: Filters to show only secondary alignments (flag 256).

To save these secondary alignments to a new BAM file:

.. code:: bash

   samtools view -h -f 256 your_file.bam -o secondary_alignments.bam

2. **Viewing Supplementary Alignments**
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

To view only the supplementary alignments:

.. code:: bash

   samtools view -h -f 2048 your_file.bam

-  **``-f 2048``**: Filters to show only supplementary alignments (flag
   2048).

To save these supplementary alignments to a new BAM file:

.. code:: bash

   samtools view -h -f 2048 your_file.bam -o supplementary_alignments.bam

3. **Viewing Alignments on the Reverse Strand**
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

To filter for alignments on the reverse strand:

.. code:: bash

   samtools view -h -f 16 your_file.bam

-  **``-f 16``**: Filters to show alignments on the reverse strand.

4. **Combining Flags for More Specific Filtering**
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

You can combine flags to filter for more specific conditions:

-  **Secondary Alignments on the Reverse Strand (256 + 16 = 272):**

.. code:: bash

   samtools view -h -f 272 your_file.bam

-  **Supplementary Alignments on the Reverse Strand (2048 + 16 =
   2064):**

.. code:: bash

   samtools view -h -f 2064 your_file.bam

Summary
-------

By using ``samtools`` with specific flags, you can filter and extract
alignments from BAM files to focus on the data that is most relevant for
your analysis. Understanding the differences between primary, secondary,
and supplementary alignments is essential for correctly interpreting how
reads map to the reference genome, especially in regions with complex
genetic structure or repetitive sequences.

